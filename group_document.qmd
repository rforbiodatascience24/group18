---
title: "group_document"
format: html
editor: visual
---

## Group number: 18

-   Florencia De Lillo, s242869

-   Maria Kokali, s232486

-   Nikolas Alexander Mumm, s242825

-   Rodrigo Gallegos Dextre, s243563

-   Émile Knut Barbé, s242826

## Libraries

```{r}
library("readr")
library("stringr")
library("tidyverse")
library("patchwork")
library("ggridges")
library("dplyr")
library("broom")
library("cowplot")

```

## Data

```{r}
raw_dir <- "data/"
data_file <- "gravier.RData"
data_loc <- "https://github.com/ramhiser/datamicroarray/raw/master/data/"

if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}
load(file = str_c(raw_dir, data_file))

```

```{r}
gravier_clean <- gravier |>
  bind_cols() |>
  as_tibble()
```

```{r}
gravier_clean_aug <- gravier_clean |>
  relocate(early_metastasis = y)
```

## PCA

```{r}
pca_fit <- gravier_clean_aug |> 
  select_if(is.numeric) |>   
  prcomp(scale = TRUE)

```

```{r}
pca_fit |> 
  augment(gravier_clean_aug) |>  # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = early_metastasis)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(poor = "#D55E00", good = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()
```



```{r}
loading_scores <- as.data.frame(pca_fit$rotation) |> 
  rownames_to_column(var = "term") |>  
  as_tibble()  

gene_scores <- loading_scores |> 
  mutate(abs_value = abs(PC1)) |>   
  arrange(desc(abs_value))          

top_10_genes <- gene_scores  |> 
  slice_head(n = 10) |>   
  pull(term)              

print(top_10_genes)

 #Loadings for the top 10 genes (with signs)
top_genes_loadings <- gene_scores |> 
  filter(term %in% top_10_genes) 


```

```{r}
ggplot(top_genes_loadings, aes(x = reorder(term, PC1), y = PC1)) +
  geom_bar(stat = "identity") + 
  coord_flip() +                 
  labs(x = "Terms (Genes)", y = "Loadings (PC1)", title = "Bar Plot of Loadings for PC1") +
  theme_minimal() +              # Use a minimal theme
  theme(axis.text.y = element_text(size = 8))  
```

